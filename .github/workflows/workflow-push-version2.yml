name: Workflow lors d'un push (version 2)
on: push
jobs:
  mon_job:
    outputs:
      statut-tests: ${{steps.run-test.outcome}}
    name: Build teste et run mon application
    runs-on: ubuntu-latest
    steps:
      - name: récupérer le code
        uses: actions/checkout@v4
      - name: cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
        # voir aussi : le cache de actions/setup-node
        # - name: Setup Node.js
        #   uses: actions/setup-node@v4
        #   with:
        #     cache: 'npm'
      - name: installation des node_modules # (seulement s'ils ne sont pas déjà présents)
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: test
        id: run-test
        run: npm run test
        continue-on-error: true
      - name: build
        run: npm run build
      - name: start
        run: npm run start
      - name: sommaire
        run: |
          echo "# Résumé du step" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "On peut ajouter du markdown dans le fichier d'environnement GITHUB_STEP_SUMMARY. Il s'affichera sur la page de résumé d'une exécution de workflow." >> $GITHUB_STEP_SUMMARY
          echo "On pourrait par exemple y afficher les résultats de nos tests." >> $GITHUB_STEP_SUMMARY
  mon_2e_job:
    runs-on: ubuntu-latest
    needs: mon_job
    steps:
      - run:  echo Résultat des tests -> ${{needs.mon_job.outputs.statut-tests}} 
      

  